version: 2.1

executors:
  app-executor:
    docker:
      - image: cimg/node:16.15.1
    working_directory: ~/project

aliases:
  - &display-current_branch-name
    run:
      name: Display current branch name
      command: echo ${CIRCLE_BRANCH}
  - &restore-cache
    restore_cache:
      keys:
        - app-{{ checksum "package.json" }}
        - app-
  - &install-yarn
    run:
      name: Install yarn
      command: npm install -g yarn
  - &install-dependencies
    run:
      name: Install Dependencies
      command: yarn
  - &save_cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run:
      name: Install AWS CLI
      working_directory: /
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python3-pip python-dev-is-python2 build-essential
  - &build-project
    run:
      name: Build project
      command: |
        yarn
        yarn build
        cd build
        zip ../build-zip -r * .[^.]*
        echo "Build Successful"
  - &deploy-to-aws-s3
    run:
      name: Deploy to AWS S3
      command: |
        if [ "${CIRCLE_BRANCH}" == "production" ]
        then
          aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_PRODUCTION_BUCKET} --delete
        elif [ "${CIRCLE_BRANCH}" == "staging"  ]
        then 
          aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_STAGING_BUCKET} --delete
        else
          aws --region ${AWS_REGION} s3 sync ~/project/build s3://${AWS_DEVELOPMENT_BUCKET} --delete
        fi
  - &deploy-to-aws-cloudfront
    run:
      name: Deploy to AWS CloudFront
      command: |
        aws configure set preview.cloudfront true
        if [ "${CIRCLE_BRANCH}" === "production" ]
        then
          aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
        elif [ "${CIRCLE_BRANCH}" === "staging"  ]
        then 
          aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
        else
          aws cloudfront create-invalidation --distribution-id ${DEVELOPMENT_DISTRIBUTION_ID} --paths /\*
        fi

jobs:
  build:
    executor: app-executor
    steps:
      - checkout
      - *display-current_branch-name
      - *restore-cache
      - *install-yarn
      - *install-dependencies
      - *save_cache

  deploy-to-aws-s3:
    executor: app-executor
    steps:
      - checkout
      - *display-current_branch-name
      - *install-aws-cli
      - *build-project
      - *deploy-to-aws-s3

  deploy-to-aws-cloudfront:
    executor: app-executor
    steps:
      - checkout
      - *display-current_branch-name
      - *install-aws-cli
      - *build-project
      - *deploy-to-aws-cloudfront

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - development
                - staging
                - production
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - development
                - staging
                - production
